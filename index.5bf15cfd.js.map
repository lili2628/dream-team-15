{"mappings":"AAAC,IAASA,ECAVC,EAAEC,UAAUC,OAAM,WACdF,EAAE,WAAWG,MAAM,CACfC,QAAQ,EACRC,MAAM,EACNC,MAAO,IACPC,OAAQ,SAERC,cAAe,IACfC,cAAc,EACdC,cAAc,EACdC,kBAAkB,G,IDVb,mBAAHZ,EAA6Xa,OAAOC,QAAQC,WAApXC,UAAUhB,EAAEgB,QAAQhB,EAAEiB,mBAAmBjB,EAAEkB,oBAAoBlB,EAAEmB,uBAAuB,SAASC,GAAG,IAAI,IAAIC,EAAEC,KAAKC,GAAGF,EAAEnB,UAAUmB,EAAEG,eAAeC,iBAAiBL,GAAGM,EAAE,EAAEH,EAAEG,IAAIH,EAAEG,KAAKL,KAAKK,EAAE,OAAOC,QAAQJ,EAAEG,G,GAAM,mBAAmB1B,EAAE4B,UAAU5B,EAAE4B,QAAQ,SAASR,GAAG,IAAI,IAAIC,EAAEC,KAAKD,GAAG,IAAIA,EAAEQ,UAAU,CAAC,GAAGR,EAAEL,QAAQI,GAAG,OAAOC,EAAEA,EAAEA,EAAES,U,CAAW,OAAO,I,GAG/X5B,SAAS6B,iBAAiB,oBAAoB,W,kDAIvCC,EAAe9B,SAAS+B,cAAiB,qBACzCC,EAAuBhC,SAACuB,iBAAc,mBAI1CU,EAAAC,SAA8B,SACRC,GAEnBA,EAAAN,iBAAA,kBACIX,G,yDASalB,SAAK+B,cAAa,sBAChBK,EAAS,M,wBAMMN,EAARO,UAAVC,IAAJ,S,OAM4BN,EAAbE,SAAR,SAATC,GAE2BA,EAALN,iBAAjB,SAAT,SAATX,GACmBE,KAALM,QAAR,UAEmBW,UAAVE,OAAP,UAC6BT,EAARO,UAAVE,OAAP,S,OAM8BvC,SAATwC,KAALX,iBAAjB,SAAT,SAAAX,GAGyB,IAFCA,EAAFuB,UAIQzC,SAAT+B,cAAd,iBAAXM,UAAUE,OAAO,UACiBvC,SAAT+B,cAAd,YAAZM,UAAME,OAAO,U,IAE2B,GAGGT,EAARD,iBAAjB,SAAT,WAC8B7B,SAAT+B,cAAd,iBAAjBM,UAAQE,OAAO,UACyBnB,KAALiB,UAAVE,OAAP,S,OE/DlB,MACG,MAAMG,EAAa1C,SAAS+B,cAAc,sBACpCY,EAAc3C,SAAS+B,cAAc,iBACrCa,EAAe5C,SAAS+B,cAAc,kBAEtCc,EAAa,KACjB,MAAMC,EAC0C,SAA9CH,EAAYI,aAAa,mBAA+B,EAC1DJ,EAAYK,aAAa,iBAAkBF,GAC3CJ,EAAWL,UAAUY,OAAO,WAK5BC,eAH0BJ,EAEtB,mBADA,qBAE6B9C,SAASwC,KAAK,EAGjDG,EAAYd,iBAAiB,QAASgB,GACtCD,EAAaf,iBAAiB,QAASgB,GAGvClC,OAAOwC,WAAW,sBAAsBtB,iBAAiB,UAAUX,IAC5DA,EAAEJ,UACP4B,EAAWL,UAAUE,OAAO,WAC5BI,EAAYK,aAAa,iBAAiB,GAC1CE,eAAeE,iBAAiBpD,SAASwC,MAAK,GAEjD,EA3BF,GCADzC,EAAEC,UAAUC,OAAM,WACdF,EAAE,sBAAsBG,MAAM,CAC1BC,QAAQ,EACRC,MAAM,EACNC,MAAO,IACPC,OAAQ,OACR+C,UAAU,EACV9C,cAAe,KACfC,cAAc,EACdC,cAAc,EACdC,kBAAkB,G","sources":["src/js/modal-script.js","src/js/slider.js","src/js/mobile-menu.js","src/js/gallery.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","$(document).ready(function () {\n    $('.slider').slick({\n        arrows: false,\n        dots: true,\n        speed: 1000,\n        easing: 'linear',\n        // autoplay: true,\n        autoplaySpeed: 3000,\n        pauseOnFocus: true,\n        pauseOnHover: true,\n        pauseOnDotsHover: true,\n    });\n});\n","(() => {\n    const mobileMenu = document.querySelector('.js-menu-container');\n    const openMenuBtn = document.querySelector('.js-open-menu');\n    const closeMenuBtn = document.querySelector('.js-close-menu');\n\n    const toggleMenu = () => {\n      const isMenuOpen =\n        openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n      openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n      mobileMenu.classList.toggle('is-open');\n\n      const scrollLockMethod = !isMenuOpen\n        ? 'disableBodyScroll'\n        : 'enableBodyScroll';\n      bodyScrollLock[scrollLockMethod](document.body);\n    };\n\n    openMenuBtn.addEventListener('click', toggleMenu);\n    closeMenuBtn.addEventListener('click', toggleMenu);\n\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n      if (!e.matches) return;\n      mobileMenu.classList.remove('is-open');\n      openMenuBtn.setAttribute('aria-expanded', false);\n      bodyScrollLock.enableBodyScroll(document.body);\n    });\n  })();","$(document).ready(function () {\n    $('.gallery-container').slick({\n        arrows: false,\n        dots: false,\n        speed: 1000,\n        easing: 'ease',\n        autoplay: true,\n        autoplaySpeed: 3500,\n        pauseOnFocus: true,\n        pauseOnHover: true,\n        pauseOnDotsHover: true,\n    });\n});\n"],"names":["e1","$","document","ready","slick","arrows","dots","speed","easing","autoplaySpeed","pauseOnFocus","pauseOnHover","pauseOnDotsHover","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","toggle","bodyScrollLock","matchMedia","enableBodyScroll","autoplay"],"version":3,"file":"index.5bf15cfd.js.map"}